using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading.Tasks;

namespace Razor_Components
{
    /// <summary>
    /// Used for storing data about parameter and methods -e.g. when the method was last called and with what parameters
    /// </summary>
    public interface IDatastore
    {
        /// <summary>
        /// AddOrUpdate method and parameters
        /// </summary>
        /// <param name="methodMetadata"></param>
        /// <param name="parameters"></param>
        Task<bool> AddOrUpdate(MethodMetadata methodMetadata, IEnumerable<ParameterMetadata> parameters);

        /// <summary>
        /// Get the metadata for a particular method
        /// </summary>
        /// <returns></returns>
        Task<(MethodMetadata? method, IReadOnlyDictionary<string,ParameterMetadata>? parameters)> GetMetadata(string classAndMethod);
    }

    /// <summary>
    /// User data about a particular method
    /// </summary>
    public class MethodMetadata
    {
        /// <summary>
        /// Parameter Id - autogenerated
        /// </summary>
        [Key]
        public long Id { get; set; }

        /// <summary>
        /// Indexed
        /// </summary>
        [Required]
        public string ClassAndMethod { get; set; }
    

        ///// <summary>
        ///// The class this method belongs to
        ///// </summary>
        //[Required]
        //public string ClassName { get; set; }


        ///// <summary>
        ///// The name of this method
        ///// </summary>
        //[Required]
        //public string MethodName { get; set; }

        /// <summary>
        /// When this method was last called
        /// </summary>
        public DateTime? LastCalled { get; set; }

        /// <summary>
        /// User notes about this method
        /// </summary>
        public string? Notes { get; set; }

    }

    /// <summary>
    /// User data about a particular parameter
    /// </summary>
    public class ParameterMetadata
    {
        /// <summary>
        /// Parameter Id - autogenerated
        /// </summary>
        [Key]
        public long Id { get; set; }

        /// <summary>
        /// Indexed search property
        /// </summary>
        [Required]
        public string PClassAndMethod {get; set; }

        ///// <summary>
        ///// The class this parameter's method is on
        ///// </summary>
        //[Required]
        //public string ClassName { get; set; }

        ///// <summary>
        ///// The method this parameter belongs to
        ///// </summary>
        //[Required]
        //public string MethodName { get; set; }

        /// <summary>
        /// The name of the parameter
        /// </summary>
        [Required]
        public string ParameterName { get; set; }

        /// <summary>
        /// The most recent value - as a string
        /// </summary>
        public string? MostRecentValueString { get; set; }

        /// <summary>
        /// All previously used values - as one big string
        /// </summary>
        public string? PreviousValueStrings { get; set; }

        /// <summary>
        /// User notes about this parameter
        /// </summary>
        public string? Notes { get; set; }
    }
}
